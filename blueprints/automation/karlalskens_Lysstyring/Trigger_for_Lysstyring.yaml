blueprint:
  name: Trigger for lysstyring
  description: >
    Dette er første del av lysstyringen. Det er en automasjon som ved bevegelse får en input_boolean til å slå seg på. Etter en gitt tid uten aktivitet slår den verdien av igjen.

    For at dette skal fungere må scener aktiveres av denne verdien.

  domain: automation
  author: Karl Jørgen
  source_url: https://github.com/karlalskens/Home-Assistant-Lysstyring/blob/main/blueprints/automation/karlalskens_Lysstyring/Trigger_for_Lysstyring.yaml
  input:
    binary_sensors:
      name: Binary Sensors
      description: Hvilke bevegelsessensorer skal brukes som triggere?
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    input_booleans:
      name: Input Booleans
      description: Angi hjelpeverdien for området. Må være en input_boolean som begynner med "tilstede_".
      selector:
        entity:
          domain: input_boolean
          multiple: false
    countdown_time:
      name: Countdown Time
      description: Hvor lang tid skal det ta før lyset skal slukkes?
      selector:
        duration: {}
    bypass_boolean:
      name: Bypass Boolean
      description: Hvilken hjelpeverdi skal brukes til å deaktivere styringen?
      selector:
        entity:
          domain: input_boolean
          multiple: false

trigger:
  - platform: state
    entity_id: !input binary_sensors
    from: "off"
    to: "on"
  - platform: state
    entity_id: !input input_booleans
    from: "on"
    to: "off"

condition:
  - condition: state
    entity_id: !input bypass_boolean
    state: "off"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'on' and trigger.from_state.state == 'off' }}"
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: !input input_booleans
          - repeat:
              while:
                - condition: state
                  entity_id: !input input_booleans
                  state: "on"
              sequence:
                - wait_template: "{{ states | selectattr('entity_id', 'in', input.binary_sensors) | selectattr('state', 'eq', 'on') | list | length > 0 }}"
                  timeout: "00:01:00"
                  continue_on_timeout: true
                - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ states | selectattr('entity_id', 'in', input.binary_sensors) | selectattr('state', 'eq', 'on') | list | length > 0 }}"
                      sequence:
                        - service: script.restart_countdown
                        - wait_template: "{{ false }}"  # This ensures that the sequence is stopped and restarted.
          - service: script.start_countdown
  - choose:
      - conditions:
          - condition: state
            entity_id: !input input_booleans
            state: "off"
        sequence: []
    default:
      - service: input_boolean.turn_off
        target:
          entity_id: !input input_booleans

script:
  start_countdown:
    sequence:
      - delay: !input countdown_time
      - service: input_boolean.turn_off
        target:
          entity_id: !input input_booleans

  restart_countdown:
    sequence:
      - service: script.turn_off
        target:
          entity_id: script.start_countdown
      - service: script.start_countdown

mode: restart
